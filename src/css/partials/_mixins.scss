@use 'sass:color';
@use 'variables' as vars;

// Media Queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: vars.$breakpoint-xl) { @content; }
  }
}

// Flexbox utilities
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Button styles
@mixin button-base {
  padding: vars.$spacing-sm vars.$spacing-base;
  border-radius: vars.$border-radius;
  border: none;
  font-weight: vars.$font-weight-medium;
  font-size: vars.$font-size-base;
  transition: vars.$transition-base;
  cursor: pointer;
  font-family: inherit;
}

@mixin button-variant($bg-color, $text-color, $hover-color) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover {
    background-color: $hover-color;
  }
}

// Modern color manipulation
@mixin button-variant-auto($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover {
    background-color: color.scale($bg-color, $lightness: -10%);
  }
}

// Card style
@mixin card($padding: vars.$spacing-base, $bg-color: white) {
  background-color: $bg-color;
  border-radius: vars.$border-radius;
  padding: $padding;
  box-shadow: vars.$box-shadow;
}

// Text truncation
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Focus styles
@mixin focus-ring {
  outline: none;
  box-shadow: vars.$focus-ring;
}

// Grid layout
@mixin grid($columns: 1, $gap: vars.$spacing-base) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}
